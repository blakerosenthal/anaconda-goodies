name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-wheel:
    name: Build wheel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools build

      - name: Build
        run: |
          python -m build

      - name: Upload the build artifact
        uses: actions/upload-artifact@v3
        with:
          name: anaconda-goodies-wheel-${{ github.sha }}
          path: dist/*
          if-no-files-found: error

  #   build-conda-package:
  #     name: Build conda package
  #     runs-on: ubuntu-latest
  #     steps:
  #         - uses: actions/checkout@v4
  #           with:
  #             fetch-depth: 0
  #         - uses: conda-incubator/setup-miniconda@v2
  #           with:
  #             auto-update-conda: false
  #             channels: defaults, conda-forge, t/${{ secrets.ANACONDA_ORG_DOWNLOAD_TOKEN }}/anaconda-cloud, t/${{ secrets.ANACONDA_ORG_DOWNLOAD_TOKEN }}/anaconda-cloud/label/dev
  #             activate-environment: build
  #             environment-file: etc/build.linux-64.lock
  #         - name: conda build
  #           shell: bash -l {0}
  #           run: |
  #             VERSION=`hatch version` conda build conda.recipe
  #             mv $CONDA_PREFIX/conda-bld .
  #         - name: Upload the build artifact
  #           uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3
  #           with:
  #             name: anaconda-cloud-conda-${{ github.sha }}
  #             path: libs/anaconda-cloud/conda-bld
  #             if-no-files-found: error


  #   publish-conda-pkg-to-anaconda-dot-org:
  #     name: Publish conda package to Anaconda.org
  #     runs-on: ubuntu-latest
  #     if: github.event_name == 'push'  # Only run on push to main branch
  #     needs: [check]
  #     steps:
  #     - name: Retrieve the source code
  #       uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
  #       with:
  #         fetch-depth: 0
  #     - uses: conda-incubator/setup-miniconda@3b0f2504dd76ef23b6d31f291f4913fb60ab5ff3 # v2
  #       with:
  #         auto-update-conda: false
  #         channels: defaults, conda-forge
  #         activate-environment: build
  #         environment-file: etc/build.linux-64.lock
  #     - name: Download the build artifacts
  #       uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
  #       with:
  #         name: anaconda-cloud-conda-${{ github.sha }}
  #         path: ~/cli-conda-bld
  #     - name: publish
  #       shell: bash -l {0}
  #       env:
  #         TOKEN: ${{ secrets.ANACONDA_ORG_UPLOAD_TOKEN }}
  #       run: |
  #         [[ "$GITHUB_REF" =~ ^refs/tags/anaconda-cloud-v ]] || export LABEL="--label dev"
  #         anaconda --verbose \
  #           --token $TOKEN \
  #           upload \
  #           --user anaconda-cloud \
  #           $LABEL \
  #           --force \
  #           --private \
  #           ~/cli-conda-bld/noarch/anaconda-cloud-*
  #
  #   publish-wheel-to-anaconda-dot-org:
  #     name: Publish wheel to Anaconda.org
  #     runs-on: ubuntu-latest
  #     if: github.event_name == 'push'  # Only run on push to main branch
  #     needs: [check]
  #     steps:
  #     - name: Retrieve the source code
  #       uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4
  #       with:
  #         fetch-depth: 0
  #     - name: Download the build artifacts
  #       uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
  #       with:
  #         name: anaconda-cloud-wheel-${{ github.sha }}
  #         path: ~/dist
  #     - uses: conda-incubator/setup-miniconda@3b0f2504dd76ef23b6d31f291f4913fb60ab5ff3 # v2
  #       with:
  #         miniconda-version: latest
  #         python-version: "3.10"
  #         activate-environment: "upload-env"
  #     - name: Upload to anaconda.org
  #       env:
  #         TOKEN: ${{ secrets.ANACONDA_ORG_UPLOAD_TOKEN }}
  #         GITHUB_REF: ${{ github.ref }}
  #       # TODO: Remove the channel specifier below. This is an implicit test of the new anaconda-client version
  #       run: |
  #         source $CONDA/bin/activate
  #         conda install -y anaconda-client
  #         [[ "$GITHUB_REF" =~ ^refs/tags/anaconda-cloud-v ]] || export LABEL="--label dev"
  #         anaconda --verbose \
  #           --token $TOKEN \
  #           upload \
  #           --user anaconda-cloud \
  #           ~/dist/*.whl \
  #           --summary \
  #           "Client tools and libraries for Anaconda.cloud APIs" \
  #           $LABEL \
  #           --force \
  #           --private
  #     - name: Clean up older artifacts
  #       uses: glassechidna/artifact-cleaner@master
  #       with:
  #         minimumAge: 86400

  pypi:
    runs-on: ubuntu-latest
    needs: [build-wheel]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Download the build artifacts
        uses: actions/download-artifact@v3
        with:
          name: anaconda-goodies-wheel-${{ github.sha }}
          path: ~/dist
      - name: Publish
        env:
          TWINE_USERNAME: __token__
            # TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          twine check dist/*
          # twine upload dist/*
          twine upload --repository testpypi dist/*
